@page "/learnBlazor/bindprop"


<div class="row">
	<div class="col-6 border p-3">
		<h1>Product Playground</h1>
		IsActive : <input type="checkbox" @bind-value="product.IsActive" checked="@(product.IsActive ? "checked" : null)"/>
		<br />
		Input Price :
		<input type="number" @bind="@product.Price" @bind:event="oninput" /> 
		<br />
		<select @bind="selectedProp">
			@foreach (var prop in product.ProductProps)
			{
				<option value="@prop.Key" >@prop.Key</option>
			}
		</select>

		

	
	</div>
	<div class="col-6 border p-3">
		Name : @product.Name <br />
		IsActive : @product.IsActive<br />
		Price : @product.Price<br />
		The Product is @(product.IsActive ? "Active" : "Inactive") <br />
		Selected prop : @selectedProp
		@if (!string.IsNullOrEmpty(selectedProp))
		{
			<p>
				Selected prop value : @product.ProductProps.FirstOrDefault(e => e.Key == selectedProp).Value;
			</p>
		}
	</div>
	
	<div class="col-12 border p-4">


		<h2 class="text-success">Product table</h2>
		<table class="table table-striped" title="Product Table">
			<thead class="thead-dark">
			<tr>
		
				<th scope="col">Product Name</th>
				<th scope="col">Price</th>
				<th scope="col">Is Active</th>
			</tr>
			</thead>
			<tbody>
			@foreach (var p in Products)
			{
				<tr>
		
					<td>
						<input type="text" @bind="p.Name" @bind:event="oninput"/>
					</td>
					<td>
						<input type="text" @bind="p.Price" @bind:event="oninput" />
					</td>
					<td>
						<input type="checkbox" @bind="p.IsActive" />
					</td>
				</tr>
			}
	
			</tbody>
		</table>
	</div>
	<div class="col-12 border p-4">
		@foreach (var p in Products)
		{
			
			<p>@p.Name [@p.Price] is @(p.IsActive ? "IsActive" : "InActive") </p>
				
		}
	</div>
</div>





@code {
	private string selectedProp = "";
	Product product = new()
	{
		Id = 1,
		Name = "IPhone",
		IsActive = true,
		Price = 5,
		ProductProps = new List<ProductProp>()
		{
			new ProductProp(){Id = 1, Key = "Color", Value = "Red"},
			new ProductProp(){Id = 1, Key = "Size", Value = "20sz"},
			new ProductProp(){Id = 1, Key = "Flavor", Value = "Rose"},
		}
	};

	List<Product> Products = new List<Product>();

	protected override void OnInitialized()
	{
		Products.Add(new()
		{
			Id = 1,
			Name = "Midnight Blaze",
			IsActive = false,
			ProductProps = new List<ProductProp>()
			{
				new ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
				new ProductProp { Id = 2, Key = "Size", Value = "20oz"},
				new ProductProp { Id = 3, Key = "Color", Value="Purple" }
			}
		});

		Products.Add(new()
		{
			Id = 2,
			Name = "Blossom Lily",
			IsActive = true,
				ProductProps = new List<ProductProp>()
			{
				new ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
				new ProductProp { Id = 2, Key = "Size", Value = "18oz" },
				new ProductProp {Id = 3,Key = "Color",Value = "White"}
			}
		});
	}

}
