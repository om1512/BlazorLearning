@page "/learnBlazor/DemoProduct"
<h1 class="text-success">Demo Product</h1>
<h2>Favorite Count : @FavoriteCount</h2>
<div class="row">
	@foreach (var p in Products)
	{
		<_ProductCard p="@p" OnFavoriteUpdated="FavoriteCountChange" OnSelected="SelectedProduct"/>
	}
</div>
@foreach (var s in SelectedProducts)
{
	<p>@s</p>
}


@code {
	List<Product> Products = new List<Product>();
	List<string> SelectedProducts = new List<string>();


	public int FavoriteCount { get; set; } = 0;
	public bool IsVisible { get; set; }


	void RemoveItem(int id)
	{
		Product pro = Products.FirstOrDefault(p => p.Id == id);
		if (pro is not null)
		{
			Products.Remove(pro);
		}

	}

	void FavoriteCountChange(bool isSelected)
	{
		if (isSelected)
		{
			FavoriteCount++;
		}
		else
		{
			FavoriteCount--;
		}
	}

	void SelectedProduct(string name)
	{
		if (SelectedProducts.Contains(name))
		{
			SelectedProducts.Remove(name);
		}
		else
		{
			SelectedProducts.Add(name);
		}
		
	}

	protected override void OnInitialized()
	{
		Products.Add(new()
		{
			Id = 1,
			Name = "Midnight Blaze",
			IsActive = false,
			ProductProps = new List<ProductProp>()
			{
				new ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
				new ProductProp { Id = 2, Key = "Size", Value = "20oz"},
				new ProductProp { Id = 3, Key = "Color", Value="Purple" }
			}
		});

		Products.Add(new()
		{
			Id = 2,
			Name = "Blossom Lily",
			IsActive = true,
			ProductProps = new List<ProductProp>()
			{
				new ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
				new ProductProp { Id = 2, Key = "Size", Value = "18oz" },
				new ProductProp {Id = 3,Key = "Color",Value = "White"}
			}
		});
	}
}
